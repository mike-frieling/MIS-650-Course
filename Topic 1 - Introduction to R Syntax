1.	What are the two ways you can tell R to store something into an object? For both ways, write the code that would store the value of 2 + 2 into an object called “four.”

four <- 2 + 2
four = 2 + 2

2.	You encounter a line of R code that reads c(1,3,5,7,9). What is the c( ) function telling R to do with that sequence of numbers? Would the c( ) function work on elements other than numbers? 
Why or why not?  

The c() function puts together the values in it to create a vector. The c() function is commanding R to create a vector with the values of 1, 3, 5, 7, and 9 within it. 
A vector is a collection of elements, of the same type. The c() function also works on elements other than numbers so long as they are of the same type. 
An example would be x <- 1:4. Then when we run c(x) it will output [1] 1 2 3 4. Another example would be c(One=”a”, Two=”b”, Three=”c”). 
The output for this would be One “a”   Two “b”   Three “c” with the “a” type values appearing under the name type values One and so on. 
c(1,3,5,7,9)
Output - [1] 1 3 5 7 9
Examples used to answer question: x <- 1:4
                                  c(x) 
                                  c(One="a", Two="b", Three="c")
Output - [1] 1 2 3 4

3.	Write R code that would install and load the “dplyr” package into your R environment. Why are two lines of code required rather than just one?

install.packages(“dplyr”)
library(dplyr)

4.	Run the following line of code to create a matrix “mat” with three rows and three columns. 
mat <- matrix(1:9, nrow=3, ncol=3)
Check to ensure the code worked by typing “mat” into your R console and viewing the output. Include the R console output as part of your answer.
Write a line of code that would extract the observation in the first row, and second column. Write a line of code that would extract the entire third column. Write a line of code that would extract everything except for the first row. Be sure to include the output values for each line of code as part of your answer.

mat <- matrix(1:9, nrow = 3, ncol = 3)
mat	
mat[1,2]
mat[,3]
mat[2:3, 1:3]

5.	Variable class is always important in analysis to ensure our models treat the variables correctly. Suppose you have a dataset called “dat” and a variable called “prestige” that R reads as a factor, but that your model requires to be numeric. 
Write a line of code that converts the prestige variable to numeric. Write a separate line of code that would check to ensure the variable is transformed.

y <- 4:6
x <- 1:3
dat <- as.data.frame(cbind(x,y))
prestige <- factor(1:3)
prestige <- as.numeric(prestige)

6.	One essential skill for new R users is being able to read and understand the package documentation to understand the arguments that various functions require. 
The easiest way to access these package documents is by using R’s help feature. Write two lines of code, one for an exact search of “poisson”; and one for a fuzzy search of “poisson.” 
What is the difference between the two help approaches?

help("poisson")
> ?
+ poisson
